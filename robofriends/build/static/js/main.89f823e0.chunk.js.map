{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/reusable/scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgBeA,EAbF,SAAC,GACb,IADeC,EAChB,EADgBA,GAAIC,EACpB,EADoBA,KAAMC,EAC1B,EAD0BA,MAEtB,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACE,6BAAKC,IACL,4BAAIC,WCICI,EAZE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACE,8BACGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAAcV,GAAIS,EAAKT,GAAIC,KAAMQ,EAAKR,KAAMC,MAAOO,EAAKP,OAA7CQ,SCQNC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKV,UAAU,OAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,oBACZC,SAAUH,OCOHI,G,MAdA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,EAAMK,aCuCEC,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAYFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZf,YAAac,EAAME,OAAOC,SAb5B,EAAKC,MAAQ,CACXvB,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBmB,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKR,SAAS,CAAEpB,OAAQ4B,S,oBAQ7C,WAAU,IAAD,EACuBC,KAAKN,MAA5BvB,EADA,EACAA,OAAQK,EADR,EACQA,YACTyB,EAAiB9B,EAAO+B,QAAO,SAACC,GACpC,OAAOA,EAAMtC,KACVuC,cACAC,SAAS7B,EAAY4B,kBAG1B,OAAQjC,EAAOmC,OAMb,sBAAKvC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,OAAQ8B,SARtB,oBAAIlC,UAAU,KAAd,+B,GA9BYwC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.89f823e0.chunk.js","sourcesContent":["import React from \"react\"\n\n\nconst Card = ( {id, name, email}) =>\n{\n    return (\n      <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n        <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\n        <div>\n          <h2>{name}</h2>\n          <p>{email}</p>\n        </div>\n      </div>\n    );\n}\n\nexport default Card","import React from \"react\";\nimport Card from \"./Card\";\nconst CardList = ({robots}) => {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card key={i} id={user.id} name={user.name} email={user.email} />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className=\"pa2 \">\n      <input\n        className=\"pa3 ba b--green bg-lightest blue\"\n        type=\"search\"\n        placeholder=\"Search Robots ...\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import { React } from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"1px solid black\",\n        height: \"500px\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport \"./App.css\";\nimport Scroll from \"../components/reusable/scroll\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n  onSearchChange = (event) => {\n    this.setState({\n      searchfield: event.target.value,\n    });\n  };\n\n  render() {\n    const {robots, searchfield} = this.state\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name\n        .toLowerCase()\n        .includes(searchfield.toLowerCase());\n    });\n\n    return !robots.length ? \n    (\n      <h1 className=\"f2\">Loading . . .</h1>\n    ):\n\n    (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <CardList robots={filteredRobots} />\n        </Scroll>\n      </div>\n    )\n  \n}}\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable no-useless-concat */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}